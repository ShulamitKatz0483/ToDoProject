{"ast":null,"code":"import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5192\"\naxios.defaults.baseURL = \"https://localhost:5192\";\naxios.interceptors.response.use(response => response, error => {\n  console.error('Axios response error:', error);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        \"name\": name,\n        \"isComplete\": false\n      });\n      console.log('addTask response:', result.data);\n      return result.data;\n    } catch (error) {\n      console.error('addTask error:', error);\n    }\n  },\n  // setCompleted: async (id,name, isComplete) => {\n  //   try {\n  //     console.log(isComplete);\n  //     // Making a PUT or PATCH request to update the task's completion status]\n  //     debugger;\n  //     const result = await axios.put(`${apiUrl}/items/${id}`, {\n  //       \"name\":name,\n  //       \"isComplete\": isComplete\n  //     });\n\n  //     console.log('setCompleted response:', result.data);\n\n  //     return result.data;\n  //   } catch (error) {\n  //     console.error('setCompleted error:', error);\n  //     throw error; // Propagate the error to the calling function\n  //   }\n  // },\n\n  setCompleted: async (id, isComplete) => {\n    try {\n      const todo = await (await axios.get(`${apiUrl}/items/${id}`)).data;\n      console.log(todo);\n      console.log(isComplete);\n      // Making a PUT or PATCH request to update the task's completion status]\n      debugger;\n      const result = await axios.put(`${apiUrl}/items/${id}`, {\n        \"name\": todo.name,\n        \"isComplete\": isComplete\n      });\n      console.log('setCompleted response:', result.data);\n      return result.data;\n    } catch (error) {\n      console.error('setCompleted error:', error);\n      throw error; // Propagate the error to the calling function\n    }\n  },\n  deleteTask: async id => {\n    try {\n      const result = await axios.delete(`${apiUrl}/items/${id}`);\n      console.log('deleteTask response:', result.data);\n      return result.data;\n    } catch (error) {\n      console.error('deleteTask error:', error);\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","apiUrl","data","addTask","name","post","log","setCompleted","id","isComplete","todo","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/פרקטיקוד/tasks/toDoClient/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5192\"\naxios.defaults.baseURL = \"https://localhost:5192\";\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('Axios response error:', error);\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n      try {\n        const result = await axios.post(`${apiUrl}/items`, {\n          \"name\": name,\n          \"isComplete\": false \n        });\n  \n        console.log('addTask response:', result.data);\n  \n        return result.data;\n      } catch (error) {\n        console.error('addTask error:', error);\n      }\n},\n\n// setCompleted: async (id,name, isComplete) => {\n//   try {\n//     console.log(isComplete);\n//     // Making a PUT or PATCH request to update the task's completion status]\n//     debugger;\n//     const result = await axios.put(`${apiUrl}/items/${id}`, {\n//       \"name\":name,\n//       \"isComplete\": isComplete\n//     });\n\n//     console.log('setCompleted response:', result.data);\n\n//     return result.data;\n//   } catch (error) {\n//     console.error('setCompleted error:', error);\n//     throw error; // Propagate the error to the calling function\n//   }\n// },\n\n\nsetCompleted: async (id, isComplete) => {\n  try {\n    const todo = await (await axios.get(`${apiUrl}/items/${id}`)).data;\n    console.log(todo);\n    console.log(isComplete);\n    // Making a PUT or PATCH request to update the task's completion status]\n    debugger;\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      \"name\":todo.name,\n      \"isComplete\": isComplete\n    });\n\n    console.log('setCompleted response:', result.data);\n\n    return result.data;\n  } catch (error) {\n    console.error('setCompleted error:', error);\n    throw error; // Propagate the error to the calling function\n  }\n},\n\n\n  deleteTask:async(id)=>{\n    try {\n      const result = await axios.delete(`${apiUrl}/items/${id}`);\n      console.log('deleteTask response:', result.data);\n      return result.data;\n    } catch (error) {\n      console.error('deleteTask error:', error);\n    }\n}\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,wBAAwB;AAEjDF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC7C,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEC,MAAO,QAAO,CAAC;IACjD,OAAOF,MAAM,CAACG,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IAClB,IAAI;MACF,MAAML,MAAM,GAAG,MAAMX,KAAK,CAACiB,IAAI,CAAE,GAAEJ,MAAO,QAAO,EAAE;QACjD,MAAM,EAAEG,IAAI;QACZ,YAAY,EAAE;MAChB,CAAC,CAAC;MAEFT,OAAO,CAACW,GAAG,CAAC,mBAAmB,EAAEP,MAAM,CAACG,IAAI,CAAC;MAE7C,OAAOH,MAAM,CAACG,IAAI;IACpB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACN,CAAC;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGAa,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMtB,KAAK,CAACY,GAAG,CAAE,GAAEC,MAAO,UAASO,EAAG,EAAC,CAAC,EAAEN,IAAI;MAClEP,OAAO,CAACW,GAAG,CAACI,IAAI,CAAC;MACjBf,OAAO,CAACW,GAAG,CAACG,UAAU,CAAC;MACvB;MACA;MACA,MAAMV,MAAM,GAAG,MAAMX,KAAK,CAACuB,GAAG,CAAE,GAAEV,MAAO,UAASO,EAAG,EAAC,EAAE;QACtD,MAAM,EAACE,IAAI,CAACN,IAAI;QAChB,YAAY,EAAEK;MAChB,CAAC,CAAC;MAEFd,OAAO,CAACW,GAAG,CAAC,wBAAwB,EAAEP,MAAM,CAACG,IAAI,CAAC;MAElD,OAAOH,MAAM,CAACG,IAAI;IACpB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAGCkB,UAAU,EAAC,MAAMJ,EAAE,IAAG;IACpB,IAAI;MACF,MAAMT,MAAM,GAAG,MAAMX,KAAK,CAACyB,MAAM,CAAE,GAAEZ,MAAO,UAASO,EAAG,EAAC,CAAC;MAC1Db,OAAO,CAACW,GAAG,CAAC,sBAAsB,EAAEP,MAAM,CAACG,IAAI,CAAC;MAChD,OAAOH,MAAM,CAACG,IAAI;IACpB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACJ;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}